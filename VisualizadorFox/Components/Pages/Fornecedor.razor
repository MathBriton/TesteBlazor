@page "/fornecedor"
@using System.ComponentModel.DataAnnotations

<h3>Lista de Fornecedores</h3>

@if (fornecedores.Count == 0)
{
    <p>Nenhum fornecedor cadastrado.</p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome Fantasia</th>
                <th>Razão Social</th>
                <th>Telefone</th>
                <th>Rua</th>
                <th>Bairro</th>
                <th>Município</th>
                <th>CPF</th>
                <th>CNPJ</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in fornecedores)
            {
                <tr>
                    <td>@f.Id</td>
                    <td>@f.Fantasia</td>
                    <td>@f.RazaoSocial</td>
                    <td>@f.Telefone</td>
                    <td>@f.Rua</td>
                    <td>@f.Bairro</td>
                    <td>@f.Municipio</td>
                    <td>@f.CPF</td>
                    <td>@f.CNPJ</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<FornecedorModel> fornecedores = new()
    {
        new FornecedorModel
        {
            Id = 1,
            Fantasia = "Loja da Maria",
            RazaoSocial = "Maria Comércio LTDA",
            Telefone = "(11) 91234-5678",
            Rua = "Rua das Flores, 123",
            Bairro = "Centro",
            Municipio = "São Paulo",
            CPF = "123.456.789-00",
            CNPJ = "12.345.678/0001-00"
        },
        new FornecedorModel
        {
            Id = 2,
            Fantasia = "Distribuidora XPTO",
            RazaoSocial = "XPTO Distribuição S/A",
            Telefone = "(21) 99888-7766",
            Rua = "Av. Brasil, 456",
            Bairro = "Industrial",
            Municipio = "Rio de Janeiro",
            CPF = "",
            CNPJ = "98.765.432/0001-99"
        }
    };

    public class FornecedorModel
    {
        [Key]
        public int Id { get; set; }

        [Required(ErrorMessage = "O nome fantasia é obrigatório.")]
        [StringLength(100, ErrorMessage = "O nome fantasia deve ter no máximo 100 caracteres.")]
        public string Fantasia { get; set; } = string.Empty;

        [Required(ErrorMessage = "A razão social é obrigatória.")]
        [StringLength(150, ErrorMessage = "A razão social deve ter no máximo 150 caracteres.")]
        public string RazaoSocial { get; set; } = string.Empty;

        [Phone(ErrorMessage = "Telefone inválido.")]
        [StringLength(20, ErrorMessage = "O telefone deve ter no máximo 20 caracteres.")]
        public string Telefone { get; set; } = string.Empty;

        [StringLength(100, ErrorMessage = "A rua deve ter no máximo 100 caracteres.")]
        public string Rua { get; set; } = string.Empty;

        [StringLength(60, ErrorMessage = "O bairro deve ter no máximo 60 caracteres.")]
        public string Bairro { get; set; } = string.Empty;

        [StringLength(60, ErrorMessage = "O município deve ter no máximo 60 caracteres.")]
        public string Municipio { get; set; } = string.Empty;

        [RegularExpression(@"\d{3}\.\d{3}\.\d{3}-\d{2}", ErrorMessage = "CPF deve estar no formato 000.000.000-00")]
        public string CPF { get; set; } = string.Empty;

        [RegularExpression(@"\d{2}\.\d{3}\.\d{3}/\d{4}-\d{2}", ErrorMessage = "CNPJ deve estar no formato 00.000.000/0000-00")]
        public string CNPJ { get; set; } = string.Empty;
    }
}
