@page "/produtos"
@using System.ComponentModel.DataAnnotations

<h3>Lista de Produtos</h3>

@if (produtos.Count == 0)
{
    <p>Nenhum produto cadastrado.</p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>Descrição</th>
                <th>Quantidade</th>
                <th>Preço Custo</th>
                <th>Preço Médio</th>
                <th>Preço Venda</th>
                <th>Comissão (%)</th>
                <th>Classificação</th>
                <th>Grupo</th>
                <th>Subgrupo</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in produtos)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Descricao</td>
                    <td>@item.Quantidade</td>
                    <td>@item.PrecoCusto.ToString("C")</td>
                    <td>@item.PrecoMedio.ToString("C")</td>
                    <td>@item.PrecoVenda.ToString("C")</td>
                    <td>@item.Comissao</td>
                    <td>@item.Classificacao</td>
                    <td>@item.Grupo</td>
                    <td>@item.SubGrupo</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ProdutoModel> produtos = new()
    {
        new ProdutoModel
        {
            Id = 1,
            Descricao = "Caneta Azul",
            Quantidade = 50,
            PrecoCusto = 0.80m,
            PrecoMedio = 1.00m,
            PrecoVenda = 1.50m,
            Comissao = 5,
            Classificacao = "Papelaria",
            Grupo = "Material Escolar",
            SubGrupo = "Canetas"
        },
        new ProdutoModel
        {
            Id = 2,
            Descricao = "Caderno 100 folhas",
            Quantidade = 30,
            PrecoCusto = 5.00m,
            PrecoMedio = 5.50m,
            PrecoVenda = 8.00m,
            Comissao = 10,
            Classificacao = "Papelaria",
            Grupo = "Cadernos",
            SubGrupo = "Universitário"
        }
    };

    public class ProdutoModel
    {
        [Key]
        public int Id { get; set; }

        [Required(ErrorMessage = "A descrição é obrigatória.")]
        [StringLength(100, ErrorMessage = "A descrição deve ter no máximo 100 caracteres.")]
        public string Descricao { get; set; } = string.Empty;

        [Required(ErrorMessage = "A quantidade é obrigatória.")]
        [Range(0, int.MaxValue, ErrorMessage = "A quantidade deve ser maior ou igual a zero.")]
        public int Quantidade { get; set; }

        [Required(ErrorMessage = "O preço de custo é obrigatório.")]
        [Range(0, double.MaxValue, ErrorMessage = "O preço de custo deve ser positivo.")]
        public decimal PrecoCusto { get; set; }

        [Required(ErrorMessage = "O preço médio é obrigatório.")]
        [Range(0, double.MaxValue, ErrorMessage = "O preço médio deve ser positivo.")]
        public decimal PrecoMedio { get; set; }

        [Required(ErrorMessage = "O preço de venda é obrigatório.")]
        [Range(0, double.MaxValue, ErrorMessage = "O preço de venda deve ser positivo.")]
        public decimal PrecoVenda { get; set; }

        [Required(ErrorMessage = "A comissão é obrigatória.")]
        [Range(0, 100, ErrorMessage = "A comissão deve estar entre 0 e 100.")]
        public decimal Comissao { get; set; }

        [StringLength(50, ErrorMessage = "A classificação deve ter no máximo 50 caracteres.")]
        public string Classificacao { get; set; } = string.Empty;

        [StringLength(50, ErrorMessage = "O grupo deve ter no máximo 50 caracteres.")]
        public string Grupo { get; set; } = string.Empty;

        [StringLength(50, ErrorMessage = "O subgrupo deve ter no máximo 50 caracteres.")]
        public string SubGrupo { get; set; } = string.Empty;
    }
}
