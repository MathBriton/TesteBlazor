@page "/Produtos"
@using System.ComponentModel.DataAnnotations

<h3 class="mb-4">Produtos</h3>

<div class="card p-3 mb-4 shadow-sm">
    <div class="d-flex gap-2 align-items-center">
        <input class="form-control w-25" placeholder="Buscar por descrição..." @bind="filtroDescricao" />
        <button class="btn btn-outline-light bg-dark text-white" @onclick="AplicarFiltro">
            <i class="bi bi-search me-1"></i> Filtrar
        </button>
    </div>
</div>

@if (produtosFiltrados.Any())
{
    <div class="card shadow-sm">
        <table class="table table-dark table-hover table-bordered mb-0">
            <thead class="table-light text-black">
                <tr>
                    <th>Id</th>
                    <th>Descrição</th>
                    <th>Categoria</th>
                    <th>Preço</th>
                    <th style="width: 120px;">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var produto in produtosFiltrados)
                {
                    <tr>
                        <td>@produto.Id</td>
                        <td>@produto.Descricao</td>
                        <td>@produto.Categoria</td>
                        <td>@produto.Preco.ToString("C")</td>
                        <td>
                            <button class="btn btn-sm btn-outline-info" @onclick="() => ExibirDetalhes(produto)">
                                <i class="bi bi-eye"></i> Detalhes
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning mt-3">Nenhum produto encontrado.</div>
}

@if (produtoSelecionado is not null)
{
    <div class="card mt-4 shadow-sm border border-info">
        <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
            <strong>Detalhes do Produto</strong>
            <button class="btn btn-sm btn-light" @onclick="FecharDetalhes">Fechar</button>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Descrição:</dt>
                <dd class="col-sm-9">@produtoSelecionado.Descricao</dd>

                <dt class="col-sm-3">Categoria:</dt>
                <dd class="col-sm-9">@produtoSelecionado.Categoria</dd>

                <dt class="col-sm-3">Preço:</dt>
                <dd class="col-sm-9">@produtoSelecionado.Preco.ToString("C")</dd>
            </dl>
        </div>
    </div>
}

@code {
    private string filtroDescricao = string.Empty;
    private List<ProdutoModel> produtos = new();
    private List<ProdutoModel> produtosFiltrados = new();
    private ProdutoModel? produtoSelecionado;

    protected override void OnInitialized()
    {
        produtos = new List<ProdutoModel>
        {
            new ProdutoModel { Id = 1, Descricao = "Notebook Gamer", Categoria = "Informática", Preco = 4999.90m },
            new ProdutoModel { Id = 2, Descricao = "Mouse sem fio", Categoria = "Periféricos", Preco = 149.99m },
            new ProdutoModel { Id = 3, Descricao = "Cadeira ergonômica", Categoria = "Escritório", Preco = 899.00m }
        };

        produtosFiltrados = produtos;
    }

    private void AplicarFiltro()
    {
        produtosFiltrados = produtos
            .Where(p => string.IsNullOrWhiteSpace(filtroDescricao) ||
                        p.Descricao.Contains(filtroDescricao, StringComparison.OrdinalIgnoreCase))
            .ToList();

        produtoSelecionado = null;
    }

    private void ExibirDetalhes(ProdutoModel produto)
    {
        produtoSelecionado = produto;
    }

    private void FecharDetalhes()
    {
        produtoSelecionado = null;
    }

    public class ProdutoModel
    {
        [Key]
        public int Id { get; set; }

        [Required]
        [StringLength(100)]
        public string Descricao { get; set; } = string.Empty;

        [StringLength(50)]
        public string Categoria { get; set; } = string.Empty;

        [Range(0, double.MaxValue)]
        public decimal Preco { get; set; }
    }
}
